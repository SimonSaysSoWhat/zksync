// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/security/ReentrancyGuard.sol";

contract MyZkSyncNFT is ERC721, Ownable, ReentrancyGuard {
    using SafeMath for uint256;

    uint256 public tokenIdCounter;
    mapping(uint256 => address) public tokenMinter;

    constructor() ERC721("MyZkSyncNFT", "MZSNFT") {}

    function mintNFT() external nonReentrant {
        require(tokenIdCounter < 100, "Maximum tokens minted");
        uint256 tokenId = tokenIdCounter++;
        _safeMint(msg.sender, tokenId);
        tokenMinter[tokenId] = msg.sender;
    }

   
